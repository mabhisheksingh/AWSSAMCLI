AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AbhishekS_SAM1

  Sample SAM Template for AbhishekS_SAM1


#Static parameters 
Parameters:
  LambdaName:
    Type: String
    Description: 'This is common values'
    Default: 'CPE-FIVE-DEV-'
  LayerName:
    Type: String
    Description: 'this is common values'
    Default: 'CPE-FIVE-DEV-UTILS-'
  APIKEYNAME:
    Type: String
    Description: "This is Default Apikey"
    Default: 'AbhishekSAMGateway'


# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 70
    Tracing: Active
    Runtime: nodejs16.x
    Layers:
      - !Ref UtilsLibrary
    Architectures: 
      - x86_64
    # VpcConfig:
    #   SecurityGroupIds:
    #     - sg-0e5f13f2db6f0da76
    #   SubnetIds:
    #     - subnet-0bcf8bb8cf7af7090
    #     - subnet-0cbab46285473cf8c
    Tags: 
      Owner: "AbhishekS"
      Group: "A111" 
  Api:
    TracingEnabled: True

Resources:

  #API gateway if you not create this then default api gateway created by sam cli if you have event in function "REST" "protocol :  EDGE"
  #make new API gateway
  AbhishekSAMGateway:
    Type: AWS::Serverless::Api
    Properties:
      ApiKeySourceType: 'HEADER'
      Name: 'private'
      Description: 'Test APIGateway'
      StageName: Prod
      Auth:
        ApiKeyRequired: true  # sets for all methods
      EndpointConfiguration: 
        Type: REGIONAL
 
  #APIKey
  APIKey:
    Type: AWS::ApiGateway::ApiKey
    DependsOn: [UsagePlan]
    Properties:
      Description: 'This is api-key for authentication'
      Enabled: true
      Name: !Ref APIKEYNAME
      StageKeys:
        - RestApiId: !Ref AbhishekSAMGateway
          StageName: Prod

  #API key usage plan
  UsagePlan:
    Type: AWS::ApiGateway::UsagePlan 
    DependsOn: [AbhishekSAMGatewayProdStage]
    Properties:
      ApiStages:
        - ApiId: !Ref AbhishekSAMGateway
          Stage: Prod
      Description: AbhishekS usage plan
      Quota:
        Limit: 5000
        Period: MONTH
      Throttle:
        BurstLimit: 200
        RateLimit: 100
      UsagePlanName: AbhishekS_CPE5


  UsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    DependsOn: [AbhishekSAMGateway]
    Properties:
      KeyId: !Ref APIKey
      KeyType: API_KEY
      UsagePlanId: !Ref UsagePlan

    


  #GetLambda
  GetLambdaFunctions:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: Lambdas/GetLambda
      Handler: getData.lambdaHandler
      Description : "This is get details lambda function of GroupA111"
      FunctionName: 'AbhishekS_GetDetail'
      Role: arn:aws:iam::181191750685:role/AbhishekSIAMRole
      Events:
        APIKey:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Auth:
              ApiKeyRequired: true
            Path: /hello
            Method: get
            RestApiId: !Ref AbhishekSAMGateway

  PostLambdaFunctions:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: Lambdas/PostLambda
      Handler: postData.lambdaHandler
      Description : "This is Post details lambda function of GroupA111"
      FunctionName: "AbhishekS_PostDetails"
      Role: arn:aws:iam::181191750685:role/AbhishekSIAMRole
      Events:
        APIKey:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: 
              Ref: AbhishekSAMGateway
            Path: /hello
            Method: post

  #Lambda layer for common code
  UtilsLibrary:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: GroupA111UtilsLibrary
      Description: This is common code for Group A111 project
      ContentUri: dependency
      CompatibleRuntimes:
              - nodejs16.x
      LicenseInfo: 'MIT'
      RetentionPolicy: Retain

  #SNS topic management
  GroupA111SNSTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: "GroupA111SNSTopic"
      FifoTopic: false
      TopicName: "AbhishekS-GroupA111"
      Tags: 
        - Key: "Owner"
          Value: "AbhishekS"
        - Key: "Group"
          Value: "A111"
      # Subscription:
      #   - Endpoint: "abhishek.r.singh@impetus.com"
      #     Protocol: "Email" 
        
          
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api

  AbhishekSAMGateway:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${AbhishekSAMGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  
  # APIKEYDetails:
  #   Description: "API Key details"
  #   Value: !GetAtt APIKey.Value

  
